//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthTracker.DataAccess.DbFirst
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;
    //using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class HealthTrackerEntities2 : DbContext
    {
        public HealthTrackerEntities2()
            : base("name=HealthTrackerEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Activity> Activities { get; set; }
        public DbSet<ActivityType> ActivityTypes { get; set; }
        public DbSet<Hydration> Hydrations { get; set; }
        public DbSet<Meal> Meals { get; set; }
        public DbSet<MealType> MealTypes { get; set; }
        public DbSet<Person> People { get; set; }
        public DbSet<PersonSummaryView> PersonSummaryViews { get; set; }
    
        public virtual ObjectResult<GetActivitiesViews_Result> GetActivitiesViews(Nullable<int> personId, Nullable<int> viewId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            var viewIdParameter = viewId.HasValue ?
                new ObjectParameter("viewId", viewId) :
                new ObjectParameter("viewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActivitiesViews_Result>("GetActivitiesViews", personIdParameter, viewIdParameter);
        }
    
        public virtual ObjectResult<GetPersonSummary_Result> GetPersonSummary(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonSummary_Result>("GetPersonSummary", personIdParameter);
        }
    }
}
