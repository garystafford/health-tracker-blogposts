//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets5D322C72F893AB022B227A280821D799F35B066A1DFD8C02F5345C1646692BE5))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets5D322C72F893AB022B227A280821D799F35B066A1DFD8C02F5345C1646692BE5 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets5D322C72F893AB022B227A280821D799F35B066A1DFD8C02F5345C1646692BE5()
        {
            this.EdmEntityContainerName = "HealthTrackerEntities2";
            this.StoreEntityContainerName = "HealthTrackerModelStoreContainer";
            this.HashOverMappingClosure = "4b5afb464f8dfdcf717fbbd22f13c62e546dc2bc3672bb6229b5b2c1306e6184";
            this.HashOverAllExtentViews = "6ca76adbfc4a3d87a9efbd2ce31d6d4ce247ea745ccdb2f3bf986c8f55593ef9";
            this.ViewCount = 14;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for HealthTrackerModelStoreContainer.Activities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerModelStoreContainer.Activities", @"
    SELECT VALUE -- Constructing Activities
        [HealthTrackerModel.Store.Activities](T1.Activities_ActivityId, T1.Activities_Date, T1.Activities_ActivityTypeId, T1.Activities_Notes, T1.Activities_PersonId)
    FROM (
        SELECT 
            T.ActivityId AS Activities_ActivityId, 
            T.Date AS Activities_Date, 
            T.ActivityTypeId AS Activities_ActivityTypeId, 
            T.Notes AS Activities_Notes, 
            T.PersonId AS Activities_PersonId, 
            True AS _from0
        FROM HealthTrackerEntities2.Activities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerModelStoreContainer.ActivityTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerModelStoreContainer.ActivityTypes", @"
    SELECT VALUE -- Constructing ActivityTypes
        [HealthTrackerModel.Store.ActivityTypes](T1.ActivityTypes_ActivityTypeId, T1.ActivityTypes_Description)
    FROM (
        SELECT 
            T.ActivityTypeId AS ActivityTypes_ActivityTypeId, 
            T.Description AS ActivityTypes_Description, 
            True AS _from0
        FROM HealthTrackerEntities2.ActivityTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerModelStoreContainer.Hydrations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerModelStoreContainer.Hydrations", @"
    SELECT VALUE -- Constructing Hydrations
        [HealthTrackerModel.Store.Hydrations](T1.Hydrations_HydrationId, T1.Hydrations_Date, T1.Hydrations_Count, T1.Hydrations_PersonId)
    FROM (
        SELECT 
            T.HydrationId AS Hydrations_HydrationId, 
            T.Date AS Hydrations_Date, 
            T.Count AS Hydrations_Count, 
            T.PersonId AS Hydrations_PersonId, 
            True AS _from0
        FROM HealthTrackerEntities2.Hydrations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerModelStoreContainer.Meals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerModelStoreContainer.Meals", @"
    SELECT VALUE -- Constructing Meals
        [HealthTrackerModel.Store.Meals](T1.Meals_MealId, T1.Meals_Date, T1.Meals_MealTypeId, T1.Meals_Description, T1.Meals_PersonId)
    FROM (
        SELECT 
            T.MealId AS Meals_MealId, 
            T.Date AS Meals_Date, 
            T.MealTypeId AS Meals_MealTypeId, 
            T.Description AS Meals_Description, 
            T.PersonId AS Meals_PersonId, 
            True AS _from0
        FROM HealthTrackerEntities2.Meals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerModelStoreContainer.MealTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerModelStoreContainer.MealTypes", @"
    SELECT VALUE -- Constructing MealTypes
        [HealthTrackerModel.Store.MealTypes](T1.MealTypes_MealTypeId, T1.MealTypes_Description)
    FROM (
        SELECT 
            T.MealTypeId AS MealTypes_MealTypeId, 
            T.Description AS MealTypes_Description, 
            True AS _from0
        FROM HealthTrackerEntities2.MealTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerModelStoreContainer.People
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerModelStoreContainer.People", @"
    SELECT VALUE -- Constructing People
        [HealthTrackerModel.Store.People](T1.People_PersonId, T1.People_Name)
    FROM (
        SELECT 
            T.PersonId AS People_PersonId, 
            T.Name AS People_Name, 
            True AS _from0
        FROM HealthTrackerEntities2.People AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerEntities2.Activities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerEntities2.Activities", @"
    SELECT VALUE -- Constructing Activities
        [HealthTrackerModel.Activity](T1.Activity_ActivityId, T1.Activity_Date, T1.Activity_ActivityTypeId, T1.Activity_Notes, T1.Activity_PersonId)
    FROM (
        SELECT 
            T.ActivityId AS Activity_ActivityId, 
            T.Date AS Activity_Date, 
            T.ActivityTypeId AS Activity_ActivityTypeId, 
            T.Notes AS Activity_Notes, 
            T.PersonId AS Activity_PersonId, 
            True AS _from0
        FROM HealthTrackerModelStoreContainer.Activities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerEntities2.ActivityTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerEntities2.ActivityTypes", @"
    SELECT VALUE -- Constructing ActivityTypes
        [HealthTrackerModel.ActivityType](T1.ActivityType_ActivityTypeId, T1.ActivityType_Description)
    FROM (
        SELECT 
            T.ActivityTypeId AS ActivityType_ActivityTypeId, 
            T.Description AS ActivityType_Description, 
            True AS _from0
        FROM HealthTrackerModelStoreContainer.ActivityTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerEntities2.Hydrations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerEntities2.Hydrations", @"
    SELECT VALUE -- Constructing Hydrations
        [HealthTrackerModel.Hydration](T1.Hydration_HydrationId, T1.Hydration_Date, T1.Hydration_Count, T1.Hydration_PersonId)
    FROM (
        SELECT 
            T.HydrationId AS Hydration_HydrationId, 
            T.Date AS Hydration_Date, 
            T.Count AS Hydration_Count, 
            T.PersonId AS Hydration_PersonId, 
            True AS _from0
        FROM HealthTrackerModelStoreContainer.Hydrations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerEntities2.Meals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerEntities2.Meals", @"
    SELECT VALUE -- Constructing Meals
        [HealthTrackerModel.Meal](T1.Meal_MealId, T1.Meal_Date, T1.Meal_MealTypeId, T1.Meal_Description, T1.Meal_PersonId)
    FROM (
        SELECT 
            T.MealId AS Meal_MealId, 
            T.Date AS Meal_Date, 
            T.MealTypeId AS Meal_MealTypeId, 
            T.Description AS Meal_Description, 
            T.PersonId AS Meal_PersonId, 
            True AS _from0
        FROM HealthTrackerModelStoreContainer.Meals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerEntities2.MealTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerEntities2.MealTypes", @"
    SELECT VALUE -- Constructing MealTypes
        [HealthTrackerModel.MealType](T1.MealType_MealTypeId, T1.MealType_Description)
    FROM (
        SELECT 
            T.MealTypeId AS MealType_MealTypeId, 
            T.Description AS MealType_Description, 
            True AS _from0
        FROM HealthTrackerModelStoreContainer.MealTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerEntities2.People
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerEntities2.People", @"
    SELECT VALUE -- Constructing People
        [HealthTrackerModel.Person](T1.Person_PersonId, T1.Person_Name)
    FROM (
        SELECT 
            T.PersonId AS Person_PersonId, 
            T.Name AS Person_Name, 
            True AS _from0
        FROM HealthTrackerModelStoreContainer.People AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerModelStoreContainer.PersonSummaryViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerModelStoreContainer.PersonSummaryViews", @"
    SELECT VALUE -- Constructing PersonSummaryViews
        [HealthTrackerModel.Store.PersonSummaryViews](T1.PersonSummaryViews_PersonId, T1.PersonSummaryViews_Name, T1.PersonSummaryViews_ActivitiesCount, T1.PersonSummaryViews_MealsCount, T1.PersonSummaryViews_HydrationCount)
    FROM (
        SELECT 
            T.PersonId AS PersonSummaryViews_PersonId, 
            T.Name AS PersonSummaryViews_Name, 
            T.ActivitiesCount AS PersonSummaryViews_ActivitiesCount, 
            T.MealsCount AS PersonSummaryViews_MealsCount, 
            T.HydrationCount AS PersonSummaryViews_HydrationCount, 
            True AS _from0
        FROM HealthTrackerEntities2.PersonSummaryViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for HealthTrackerEntities2.PersonSummaryViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("HealthTrackerEntities2.PersonSummaryViews", @"
    SELECT VALUE -- Constructing PersonSummaryViews
        [HealthTrackerModel.PersonSummaryView](T1.PersonSummaryView_PersonId, T1.PersonSummaryView_Name, T1.PersonSummaryView_ActivitiesCount, T1.PersonSummaryView_MealsCount, T1.PersonSummaryView_HydrationCount)
    FROM (
        SELECT 
            T.PersonId AS PersonSummaryView_PersonId, 
            T.Name AS PersonSummaryView_Name, 
            T.ActivitiesCount AS PersonSummaryView_ActivitiesCount, 
            T.MealsCount AS PersonSummaryView_MealsCount, 
            T.HydrationCount AS PersonSummaryView_HydrationCount, 
            True AS _from0
        FROM HealthTrackerModelStoreContainer.PersonSummaryViews AS T
    ) AS T1");
        }
    }
}
